[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "finlit"
version = "0.1.0"
description = "A StreamLit app for Beancount metrics"
authors = [
    "francocalvo <dev@francocalvo.ar>",
]
license = "MIT OR Apache-2.0"
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Typing :: Typed",
]
packages = [
    { include = "finlit", from = "src" },
    { include = "pgloader", from = "src" },
]

[tool.poetry.scripts]
finlit = "finlit._main:main"
pgloader = "pgloader._main:main"

[tool.poetry.dependencies]
python = "^3.12"
pandas = "^2.2.0"
numpy = "^1.26.4"
pyarrow = "^15.0.0"
beancount = "^2.3.6"
beancount-reds-plugins = "^0.3.0"
streamlit = "^1.31.1"
pygwalker = "^0.4.6"
streamlit-extras = "^0.4.0"
sqlalchemy = "^2.0.28"
beancount-stubs = "^0.1.3"
pandas-stubs = "^2.2.0.240218"
sqlalchemy-stubs = "^0.4"
psycopg2-binary = "^2.9.9"
numpy-financial = "^1.0.0"
altair = "^5.3.0"
plotly = "^5.21.0"
chart-studio = "^1.1.0"
pandera = {extras = ["mypy"], version = "^0.18.3"}
duckdb = "0.10.1"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"

[tool.black]
line-length = 88

[tool.pyright]
exclude = [
    ".venv",
    ".direnv",
]
typeCheckingMode = "standard"
useLibraryCodeForTypes = true
reportMissingTypeStubs = false

[tool.ruff]
select = [ "ALL" ]
ignore = [
    # Pyright automatically infers the type of `self`
    "ANN101",

    # Pyright automatically infers the type of `cls`
    "ANN102",

    # In some cases actively detrimental; somewhat conflicts with black
    "COM",

    # In combination with D213, this results in noisy diffs and inconsistencies
    # See also <https://github.com/charliermarsh/ruff/issues/4174>.
    "D200",

    # This results inconsistencies between function and class docstrings
    # See also <https://github.com/charliermarsh/ruff/issues/4175>.
    "D202",

    # D211 is preferred since the extra blank line isn't visually useful
    "D203",

    # D213 is preferred since it's more readable and allows more characters
    "D212",

    # Covered by D401, which is more restrictive
    "D415",

    # Too many false-positives
    "ERA",

    # Just use a recent version of Python
    "FA",

    # This would just discourage documenting deficiences, not committing them
    "FIX",

    # Type-checkers interpret redundant `as` as exporting an item
    "PLC0414",

    # False-positives with chained function calls
    "RSE102",

    # Not applicable
    "T20",

    # Causes churn and awful looking import blocks for little gain
    "TCH",

    # Just look at the file history
    "TD002",

    # Not everything is worth a link
    "TD003",
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "D100",
    "D103",
    "D104",
    "S101",
]

[tool.coverage.report]
skip_covered = true
skip_empty = true

[tool.pytest.ini_options]
# Use recommended import mode
addopts = [
    "--import-mode=importlib",
]

# Make it so you don't have to prefix every file with `test_`
python_files = "*.py"
testpaths = [
    "tests",
]
